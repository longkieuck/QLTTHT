--TRIGGER
--update muc uu dai cho hoc vien sau khi dang ki them lop hoc moi(muc hoc phi toi da la 3)
CREATE TRIGGER UPDATE_MUCUUDAI
ON HOCVIEN_LOPHOC AFTER INSERT
AS
BEGIN
	DECLARE @MAHV INT;
	SET @MAHV=(SELECT MAHV FROM INSERTED)
	
	DECLARE @MAMUD INT;
	SET @MAMUD=(SELECT MAMUD
				FROM HOCVIEN
				WHERE MaHV=@MAHV)
	IF(@MAMUD < 3)
	BEGIN
		UPDATE HOCVIEN
		SET MAMUD = HOCVIEN.MAMUD + 1
		WHERE MAHV = @MAHV
	END
END

GO
--update muc thanh toan cho giao vien sau khi dang ki them lop day moi(muc thanh toan toi da la 3)

CREATE TRIGGER UPDATE_MUCTHANHTOAN
ON LOPHOC AFTER INSERT
AS
BEGIN
	DECLARE @MAGV INT;
	SET @MAGV=(SELECT MAGV FROM INSERTED)
	
	DECLARE @MAMTT INT;
	SET @MAMTT=(SELECT MAMTT
				FROM GIAOVIEN
				WHERE MaGV=@MAGV)
	IF(@MAMTT < 3)
	BEGIN
		UPDATE GIAOVIEN
		SET MaMTT = GIAOVIEN.MaMTT + 1
		WHERE MAGV = @MAGV
	END
END
GO

--Trigger khi học viên xoá lớp đang học thì cập nhật lại mức ưu đãi
CREATE TRIGGER UPDATE_MUCUUDAI2
ON HOCVIEN_LOPHOC INSTEAD OF DELETE
AS
BEGIN
	DECLARE @MAHV INT;
	SET @MAHV=(SELECT MAHV FROM DELETED)

	DECLARE @SOLOP INT;
	SET @SOLOP=(SELECT COUNT(*)
				FROM HOCVIEN_LOPHOC
			    WHERE MaHV = @MAHV
				)
	
	IF(@SOLOP <=3)
	BEGIN
		DECLARE @MAMHP INT;
		SET @MAMHP=(SELECT MAMUD
					FROM HOCVIEN
					WHERE MaHV=@MAHV)
		UPDATE HOCVIEN
		SET MAMUD = HOCVIEN.MAMUD - 1
		WHERE MAHV = @MAHV
	END

	DELETE FROM HOCVIEN_LOPHOC
		   WHERE MALH IN(SELECT MALH FROM DELETED)
END

GO

--TRIGGER XOA BUOI HOC
CREATE TRIGGER XOA_BUOIHOC
ON BUOIHOC INSTEAD OF DELETE
AS
BEGIN
	DECLARE @MABH INT;
	SET @MABH=(SELECT MaBH FROM DELETED)

	DELETE FROM DIEMDANH
	WHERE MaBH=@MABH
	
	DELETE FROM BUOIHOC
	WHERE MaBH=@MABH

END
GO
--Trigger khi giáo viên xoá bỏ lớp học thì đồng thời xoá các buổi học,
--và các hocvien_lophoc của lớp học đó, cập nhật mức thanh toán.

CREATE TRIGGER UPDATE_MUCTHANHTOAN2
ON LOPHOC INSTEAD OF DELETE
AS
BEGIN
	DECLARE @MAGV INT;
	SET @MAGV=(SELECT MaGV FROM DELETED)

	DECLARE @MALH INT;
	SET @MALH=(SELECT MALH FROM DELETED)
	
	DECLARE @SOLOP INT;
	SET @SOLOP=(SELECT COUNT(*)
				FROM LOPHOC
			    WHERE MaGV = @MAGV
				)
	
	IF(@SOLOP <=3)
	BEGIN
		DECLARE @MAMTT INT;
		SET @MAMTT=(SELECT MAMTT
					FROM GIAOVIEN
					WHERE MaGV=@MAGV)
		UPDATE GIAOVIEN
		SET MaMTT = GIAOVIEN.MaMTT - 1
		WHERE MAGV = @MAGV
	END
	
	DELETE FROM HOCVIEN_LOPHOC
	WHERE MaLH=@MALH

	DELETE FROM BUOIHOC
	WHERE MaLH=@MALH

	DELETE FROM LOPHOC
	WHERE MALH = @MALH
END
GO

--update hoc phi cho hoc vien,luong cho giao vien sau moi lan diem danh thanh cong

CREATE TRIGGER UPDATE_HOCPHI
ON DIEMDANH AFTER INSERT
AS
BEGIN
	
	DECLARE @MAHV INT;
	SET @MAHV=(SELECT MAHV FROM inserted)
	
	DECLARE @MUCUUDAI FLOAT;
	SET @MUCUUDAI=(SELECT MUCUUDAI FROM HOCVIEN,MUCUUDAI
				   WHERE HOCVIEN.MaHV=@MAHV AND MUCUUDAI.MaMUD=HOCVIEN.MaMUD
				  )
	
	DECLARE @MABH INT;
	SET @MABH=(SELECT MABH FROM inserted)
	
	DECLARE @HP1BUOI INT;
	SET @HP1BUOI=(SELECT HP1BUOI FROM LOPHOC,BUOIHOC,MUCHOCPHI
				  WHERE BUOIHOC.MaBH=@MABH AND BUOIHOC.MaLH=LOPHOC.MaLH AND LOPHOC.MaMHP=MUCHOCPHI.MaMHP
				 )

	DECLARE @MAGV INT;
	SET @MAGV=(SELECT MAGV FROM LOPHOC,BUOIHOC
				  WHERE BUOIHOC.MaBH=@MABH AND BUOIHOC.MaLH=LOPHOC.MaLH
				 )
	
	DECLARE @TILE FLOAT;
	SET @TILE=(SELECT TILE FROM GIAOVIEN AS GV,MUCTHANHTOAN AS M
			   WHERE GV.MAGV=@MAGV AND GV.MAMTT=M.MAMTT
			   )
	--Update hoc phi cho hoc vien
	UPDATE BIENLAITHUHOCPHI
	SET HocPhi = HocPhi + @MUCUUDAI*@HP1BUOI
	WHERE MaHV=@MAHV
	--Update luong cho giao vien
	UPDATE BIENLAITRALUONG
	SET LUONG = LUONG + @HP1BUOI*@TILE
	WHERE MAGV=@MAGV
END
GO

--SP Login
CREATE PROC SP_Login
@username nvarchar(50), @pass nvarchar(50)
AS
BEGIN
	SELECT * FROM dbo.TAIKHOAN WHERE TK = @username AND MK = @pass
END
GO

--SP_GetMaQuyenByUserName
CREATE PROC SP_GetMaQuyenByUserName
@username nvarchar(50), @pass nvarchar(50)
AS
BEGIN
	SELECT * FROM dbo.TAIKHOAN WHERE TK = @username
END
GO
--SP_GetMaGVByUserName
CREATE PROC SP_GetMaGVByUserName
@username nvarchar(50), @pass nvarchar(50)
AS
BEGIN
	SELECT * FROM dbo.GIAOVIEN WHERE TK = @username
END
GO